namespace Octokit.GraphQL
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Linq.Expressions;
    using Octokit.GraphQL.Core;
    using Octokit.GraphQL.Core.Builders;

    /// <summary>
    /// Autogenerated return type of AddPullRequestReviewComment
    /// </summary>
    public class AddPullRequestReviewCommentPayload : QueryEntity
    {
        public AddPullRequestReviewCommentPayload(IQueryProvider provider, Expression expression) : base(provider, expression)
        {
        }

        /// <summary>
        /// A unique identifier for the client performing the mutation.
        /// </summary>
        public string ClientMutationId { get; }

        /// <summary>
        /// The newly created comment.
        /// </summary>
        public PullRequestReviewComment Comment => this.CreateProperty(x => x.Comment, Octokit.GraphQL.PullRequestReviewComment.Create);

        /// <summary>
        /// The edge from the review's comment connection.
        /// </summary>
        public PullRequestReviewCommentEdge CommentEdge => this.CreateProperty(x => x.CommentEdge, Octokit.GraphQL.PullRequestReviewCommentEdge.Create);

        internal static AddPullRequestReviewCommentPayload Create(IQueryProvider provider, Expression expression)
        {
            return new AddPullRequestReviewCommentPayload(provider, expression);
        }
    }
}